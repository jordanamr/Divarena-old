/*
 * This file is generated by jOOQ.
 */
package org.divarena.database.generated.tables;


import java.util.Arrays;
import java.util.List;

import org.divarena.database.generated.DivarenaDb;
import org.divarena.database.generated.Keys;
import org.divarena.database.generated.tables.records.EffectsRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row14;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Effects extends TableImpl<EffectsRecord> {

    private static final long serialVersionUID = 677242412;

    /**
     * The reference instance of <code>divarena_db.effects</code>
     */
    public static final Effects EFFECTS = new Effects();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EffectsRecord> getRecordType() {
        return EffectsRecord.class;
    }

    /**
     * The column <code>divarena_db.effects.id</code>.
     */
    public final TableField<EffectsRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>divarena_db.effects.parent_type</code>.
     */
    public final TableField<EffectsRecord, String> PARENT_TYPE = createField(DSL.name("parent_type"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>divarena_db.effects.parent_id</code>.
     */
    public final TableField<EffectsRecord, Integer> PARENT_ID = createField(DSL.name("parent_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>divarena_db.effects.duration</code>.
     */
    public final TableField<EffectsRecord, String> DURATION = createField(DSL.name("duration"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>divarena_db.effects.action_id</code>.
     */
    public final TableField<EffectsRecord, Integer> ACTION_ID = createField(DSL.name("action_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>divarena_db.effects.critical</code>.
     */
    public final TableField<EffectsRecord, Byte> CRITICAL = createField(DSL.name("critical"), org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>divarena_db.effects.params</code>.
     */
    public final TableField<EffectsRecord, String> PARAMS = createField(DSL.name("params"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>divarena_db.effects.area_shape</code>.
     */
    public final TableField<EffectsRecord, Short> AREA_SHAPE = createField(DSL.name("area_shape"), org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>divarena_db.effects.area_size</code>.
     */
    public final TableField<EffectsRecord, String> AREA_SIZE = createField(DSL.name("area_size"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>divarena_db.effects.targets</code>.
     */
    public final TableField<EffectsRecord, String> TARGETS = createField(DSL.name("targets"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>divarena_db.effects.triggers_after</code>.
     */
    public final TableField<EffectsRecord, String> TRIGGERS_AFTER = createField(DSL.name("triggers_after"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>divarena_db.effects.triggers_before</code>.
     */
    public final TableField<EffectsRecord, String> TRIGGERS_BEFORE = createField(DSL.name("triggers_before"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>divarena_db.effects.end_triggers</code>.
     */
    public final TableField<EffectsRecord, String> END_TRIGGERS = createField(DSL.name("end_triggers"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(org.jooq.impl.DSL.field("''", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>divarena_db.effects.affected_by_localisation</code>.
     */
    public final TableField<EffectsRecord, Byte> AFFECTED_BY_LOCALISATION = createField(DSL.name("affected_by_localisation"), org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * Create a <code>divarena_db.effects</code> table reference
     */
    public Effects() {
        this(DSL.name("effects"), null);
    }

    /**
     * Create an aliased <code>divarena_db.effects</code> table reference
     */
    public Effects(String alias) {
        this(DSL.name(alias), EFFECTS);
    }

    /**
     * Create an aliased <code>divarena_db.effects</code> table reference
     */
    public Effects(Name alias) {
        this(alias, EFFECTS);
    }

    private Effects(Name alias, Table<EffectsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Effects(Name alias, Table<EffectsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Effects(Table<O> child, ForeignKey<O, EffectsRecord> key) {
        super(child, key, EFFECTS);
    }

    @Override
    public Schema getSchema() {
        return DivarenaDb.DIVARENA_DB;
    }

    @Override
    public Identity<EffectsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_EFFECTS;
    }

    @Override
    public UniqueKey<EffectsRecord> getPrimaryKey() {
        return Keys.KEY_EFFECTS_PRIMARY;
    }

    @Override
    public List<UniqueKey<EffectsRecord>> getKeys() {
        return Arrays.<UniqueKey<EffectsRecord>>asList(Keys.KEY_EFFECTS_PRIMARY);
    }

    @Override
    public Effects as(String alias) {
        return new Effects(DSL.name(alias), this);
    }

    @Override
    public Effects as(Name alias) {
        return new Effects(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Effects rename(String name) {
        return new Effects(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Effects rename(Name name) {
        return new Effects(name, null);
    }

    // -------------------------------------------------------------------------
    // Row14 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row14<Integer, String, Integer, String, Integer, Byte, String, Short, String, String, String, String, String, Byte> fieldsRow() {
        return (Row14) super.fieldsRow();
    }
}
